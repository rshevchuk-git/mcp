# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: trivy

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '43 16 * * 1'

permissions: {}

jobs:
  detect-dockerfiles:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      dockerfiles: ${{ steps.find-dockerfiles.outputs.dockerfiles }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Find Dockerfiles
        id: find-dockerfiles
        run: |
          DOCKERFILES=$(find . -name Dockerfile -exec dirname {} \; | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')
          echo "dockerfiles=$DOCKERFILES" >> $GITHUB_OUTPUT

  build:
    needs: [detect-dockerfiles]
    if: ${{ needs.detect-dockerfiles.outputs.dockerfiles != '[]' && needs.detect-dockerfiles.outputs.dockerfiles != '' }}
    strategy:
      fail-fast: false
      matrix:
        dockerfile: ${{ fromJson(needs.detect-dockerfiles.outputs.dockerfiles) }}
    name: Build ${{ matrix.dockerfile }}
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Get Checkout Depth
        id: checkout-depth
        run: |
          # Fetch depth the number of commits in the PR and otherwise 1
          echo "fetch-depth=$(( ${{ (github.event_name == 'pull_request' && github.event.pull_request.commits) || 0 }} + 1 ))" >> "${GITHUB_OUTPUT}"

      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
          fetch-depth: ${{ steps.checkout-depth.outputs.fetch-depth || '1' }}

      - name: If trivy-results.sarif exists, it must be part of the PR changes
        if: github.event_name == 'pull_request' && hashFiles(format('{0}/trivy-results.sarif', matrix.dockerfile)) != ''
        id: check-sarif-in-pr
        run: |
          # Check if trivy-results.sarif is in the PR changes

          if git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ steps.checkout-code.outputs.commit }} | grep -q "${{ matrix.dockerfile }}/trivy-results.sarif"; then
            echo "${{ matrix.dockerfile }}/trivy-results.sarif is in the PR changes"
            echo "sarif-in-pr=true" >> $GITHUB_OUTPUT
            echo "::group::Here is the SARIF file before LFS pull"
            cat "${{ matrix.dockerfile }}/trivy-results.sarif"
            echo "::endgroup::"
          else
            echo "Either remove the ${{ matrix.dockerfile }}/trivy-results.sarif or include a fresh one in the PR"
            echo "sarif-in-pr=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Build an image from Dockerfile
        working-directory: ${{ matrix.dockerfile }}
        run: |
          docker build -t docker.io/${{ matrix.dockerfile }}:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        if: hashFiles(format('{0}/trivy-results.sarif', matrix.dockerfile)) == ''
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 #v0.31.0
        with:
          image-ref: 'docker.io/${{ matrix.dockerfile }}:${{ github.sha }}'
          format: 'sarif'
          output: '${{ matrix.dockerfile }}/trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@57eebf61a2246ab60a0c2f5a85766db783ad3553 # v3.28.15
        with:
          sarif_file: '${{ matrix.dockerfile }}/trivy-results.sarif'
